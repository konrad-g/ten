(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/client/app/styles/style.scss":
/*!******************************************!*\
  !*** ./src/client/app/styles/style.scss ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./src/client/elements/toast/styles/main.scss":
/*!****************************************************!*\
  !*** ./src/client/elements/toast/styles/main.scss ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./src/client/elements/toast/Toast.ts":
/*!********************************************!*\
  !*** ./src/client/elements/toast/Toast.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


exports.__esModule = true;
exports.Toast = void 0;
__webpack_require__(/*! ./styles/main.scss */ "./src/client/elements/toast/styles/main.scss");
var Toast = /** @class */ (function () {
    function Toast(parent) {
        this.REMOVE_TIME_MS = 4000;
        this.parent = parent;
        this.duration = this.REMOVE_TIME_MS;
    }
    Toast.prototype.showSuccess = function (title, message) {
        var text = this.getCustomToast(title, message, "success");
        this.addToast(text);
    };
    Toast.prototype.showInfo = function (title, message) {
        var text = this.getCustomToast(title, message, "info");
        this.addToast(text);
    };
    Toast.prototype.showWarning = function (title, message) {
        var text = this.getCustomToast(title, message, "warning");
        this.addToast(text);
    };
    Toast.prototype.showError = function (title, message) {
        var text = this.getCustomToast(title, message, "error");
        this.addToast(text);
    };
    Toast.prototype.getCustomToast = function (title, message, type) {
        var text = '<div class="dj-toast-icon-' +
            type +
            '"></div>' +
            '<div class="dj-toast-text"><div class="dj-toast-title">' +
            title +
            '</div><div class="dj-toast-message">' +
            message +
            "</div></div>";
        return text;
    };
    Toast.prototype.addToast = function (toastHtml) {
        var _this = this;
        var container = this.getContainer();
        var toast = document.createElement("div");
        toast.className = "dj-toast hide";
        toast.innerHTML = toastHtml;
        container.append(toast);
        // Add close button
        var closeBtn = document.createElement("div");
        closeBtn.className = "dj-toast-icon-close";
        toast.append(closeBtn);
        closeBtn.addEventListener("click", function () {
            _this.removeToast(toast);
        });
        setTimeout(function () {
            _this.removeToast(toast);
        }, _this.duration);
        setTimeout(function () {
            toast.classList.add("show");
            toast.classList.remove("hide");
        }, Toast.FADE_MS);
        return toast;
    };
    Toast.prototype.getContainer = function () {
        var container = document.querySelector(".dj-toast-container");
        if (!!container)
            return container;
        // Container doesn't exist
        var newContainer = document.createElement("div");
        newContainer.className = "dj-toast-container";
        this.parent.append(newContainer);
        return newContainer;
    };
    Toast.prototype.removeToast = function (toast) {
        toast.classList.add("hide");
        toast.classList.remove("show");
        setTimeout(function () {
            toast.remove();
        }, Toast.FADE_MS);
    };
    Toast.FADE_MS = 200;
    return Toast;
}());
exports.Toast = Toast;


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
var exports = __webpack_exports__;
/*!*************************************!*\
  !*** ./src/client/app/AppClient.ts ***!
  \*************************************/

exports.__esModule = true;
var Toast_1 = __webpack_require__(/*! ./../elements/toast/Toast */ "./src/client/elements/toast/Toast.ts");
__webpack_require__(/*! ./styles/style.scss */ "./src/client/app/styles/style.scss");
var AppClient = /** @class */ (function () {
    function AppClient() {
        this.initiated = false;
    }
    AppClient.prototype.start = function () {
        if (this.initiated)
            return;
        this.initiated = true;
        var self = this;
        self.toastLogger = new Toast_1.Toast(document.body);
        document.querySelector("#showToast").addEventListener("click", function () {
            var results = 5;
            var executeToast = results * Math.random();
            if (executeToast < 1) {
                self.toastLogger.showInfo("This is info. It is really long and it doesn't really fit into this small toast", "This is info message");
            }
            else if (executeToast < 2) {
                self.toastLogger.showWarning("This is warning", "This is warning message.");
            }
            else if (executeToast < 3) {
                self.toastLogger.showSuccess("Success", "You made it. Congratulations!");
            }
            else if (executeToast < 4) {
                self.toastLogger.showError("This is error", "This is error message.");
            }
            else if (executeToast <= 5) {
                self.showMultipleToasts();
            }
        });
    };
    AppClient.prototype.showMultipleToasts = function () {
        this.toastLogger.showInfo("This is info", "This is info message");
        this.toastLogger.showSuccess("Success", "You made it. Congratulations!");
        this.toastLogger.showWarning("This is warning", "This is warning message");
        this.toastLogger.showError("This is error", "This is error message");
    };
    return AppClient;
}());
// Boot
var app = new AppClient();
app.start();

})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,