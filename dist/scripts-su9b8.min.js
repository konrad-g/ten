(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/client/app/stylesheets/style.scss":
/*!***********************************************!*\
  !*** ./src/client/app/stylesheets/style.scss ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
var exports = __webpack_exports__;
/*!*************************************!*\
  !*** ./src/client/app/AppClient.ts ***!
  \*************************************/

exports.__esModule = true;
__webpack_require__(/*! ./stylesheets/style.scss */ "./src/client/app/stylesheets/style.scss");
var AppClient = /** @class */ (function () {
    function AppClient() {
        this.initiated = false;
    }
    AppClient.prototype.start = function () {
        if (this.initiated)
            return;
        this.initiated = true;
        var self = this;
        self.toastLogger = new Toast(document.body);
        document.querySelector("#showToast").addEventListener('click', function () {
            var results = 5;
            var executeToast = results * Math.random();
            if (executeToast < 1) {
                self.toastLogger.showInfo("This is info. It is really long and it doesn't really fit into this small toast", "This is info message");
            }
            else if (executeToast < 2) {
                self.toastLogger.showWarning("This is warning", "This is warning message.");
            }
            else if (executeToast < 3) {
                self.toastLogger.showSuccess("Success", "You made it. Congratulations!");
            }
            else if (executeToast < 4) {
                self.toastLogger.showError("This is error", "This is error message.");
            }
            else if (executeToast <= 5) {
                self.showMultipleToasts();
            }
        });
    };
    AppClient.prototype.showMultipleToasts = function () {
        this.toastLogger.showInfo("This is info", "This is info message");
        this.toastLogger.showSuccess("Success", "You made it. Congratulations!");
        this.toastLogger.showWarning("This is warning", "This is warning message");
        this.toastLogger.showError("This is error", "This is error message");
    };
    return AppClient;
}());
// Boot
var app = new AppClient();
app.start();

})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsTzs7Ozs7Ozs7Ozs7QUNWQTs7Ozs7OztVQ0FBO1VBQ0E7O1VBRUE7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7O1VBRUE7VUFDQTs7VUFFQTtVQUNBO1VBQ0E7Ozs7O1dDdEJBO1dBQ0E7V0FDQTtXQUNBLHVEQUF1RCxpQkFBaUI7V0FDeEU7V0FDQSxnREFBZ0QsYUFBYTtXQUM3RDs7Ozs7Ozs7Ozs7QUNOYTtBQUNiLGtCQUFrQjtBQUNsQixtQkFBTyxDQUFDLHlFQUEwQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Rlbi93ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCJ3ZWJwYWNrOi8vdGVuLy4vc3JjL2NsaWVudC9hcHAvc3R5bGVzaGVldHMvc3R5bGUuc2Nzcz9mZDg1Iiwid2VicGFjazovL3Rlbi93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90ZW4vd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly90ZW4vLi9zcmMvY2xpZW50L2FwcC9BcHBDbGllbnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW10sIGZhY3RvcnkpO1xuXHRlbHNlIHtcblx0XHR2YXIgYSA9IGZhY3RvcnkoKTtcblx0XHRmb3IodmFyIGkgaW4gYSkgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyA/IGV4cG9ydHMgOiByb290KVtpXSA9IGFbaV07XG5cdH1cbn0pKHNlbGYsIGZ1bmN0aW9uKCkge1xucmV0dXJuICIsIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5yZXF1aXJlKFwiLi9zdHlsZXNoZWV0cy9zdHlsZS5zY3NzXCIpO1xudmFyIEFwcENsaWVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBcHBDbGllbnQoKSB7XG4gICAgICAgIHRoaXMuaW5pdGlhdGVkID0gZmFsc2U7XG4gICAgfVxuICAgIEFwcENsaWVudC5wcm90b3R5cGUuc3RhcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLmluaXRpYXRlZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5pbml0aWF0ZWQgPSB0cnVlO1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIHNlbGYudG9hc3RMb2dnZXIgPSBuZXcgVG9hc3QoZG9jdW1lbnQuYm9keSk7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc2hvd1RvYXN0XCIpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHJlc3VsdHMgPSA1O1xuICAgICAgICAgICAgdmFyIGV4ZWN1dGVUb2FzdCA9IHJlc3VsdHMgKiBNYXRoLnJhbmRvbSgpO1xuICAgICAgICAgICAgaWYgKGV4ZWN1dGVUb2FzdCA8IDEpIHtcbiAgICAgICAgICAgICAgICBzZWxmLnRvYXN0TG9nZ2VyLnNob3dJbmZvKFwiVGhpcyBpcyBpbmZvLiBJdCBpcyByZWFsbHkgbG9uZyBhbmQgaXQgZG9lc24ndCByZWFsbHkgZml0IGludG8gdGhpcyBzbWFsbCB0b2FzdFwiLCBcIlRoaXMgaXMgaW5mbyBtZXNzYWdlXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZXhlY3V0ZVRvYXN0IDwgMikge1xuICAgICAgICAgICAgICAgIHNlbGYudG9hc3RMb2dnZXIuc2hvd1dhcm5pbmcoXCJUaGlzIGlzIHdhcm5pbmdcIiwgXCJUaGlzIGlzIHdhcm5pbmcgbWVzc2FnZS5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChleGVjdXRlVG9hc3QgPCAzKSB7XG4gICAgICAgICAgICAgICAgc2VsZi50b2FzdExvZ2dlci5zaG93U3VjY2VzcyhcIlN1Y2Nlc3NcIiwgXCJZb3UgbWFkZSBpdC4gQ29uZ3JhdHVsYXRpb25zIVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGV4ZWN1dGVUb2FzdCA8IDQpIHtcbiAgICAgICAgICAgICAgICBzZWxmLnRvYXN0TG9nZ2VyLnNob3dFcnJvcihcIlRoaXMgaXMgZXJyb3JcIiwgXCJUaGlzIGlzIGVycm9yIG1lc3NhZ2UuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZXhlY3V0ZVRvYXN0IDw9IDUpIHtcbiAgICAgICAgICAgICAgICBzZWxmLnNob3dNdWx0aXBsZVRvYXN0cygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIEFwcENsaWVudC5wcm90b3R5cGUuc2hvd011bHRpcGxlVG9hc3RzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnRvYXN0TG9nZ2VyLnNob3dJbmZvKFwiVGhpcyBpcyBpbmZvXCIsIFwiVGhpcyBpcyBpbmZvIG1lc3NhZ2VcIik7XG4gICAgICAgIHRoaXMudG9hc3RMb2dnZXIuc2hvd1N1Y2Nlc3MoXCJTdWNjZXNzXCIsIFwiWW91IG1hZGUgaXQuIENvbmdyYXR1bGF0aW9ucyFcIik7XG4gICAgICAgIHRoaXMudG9hc3RMb2dnZXIuc2hvd1dhcm5pbmcoXCJUaGlzIGlzIHdhcm5pbmdcIiwgXCJUaGlzIGlzIHdhcm5pbmcgbWVzc2FnZVwiKTtcbiAgICAgICAgdGhpcy50b2FzdExvZ2dlci5zaG93RXJyb3IoXCJUaGlzIGlzIGVycm9yXCIsIFwiVGhpcyBpcyBlcnJvciBtZXNzYWdlXCIpO1xuICAgIH07XG4gICAgcmV0dXJuIEFwcENsaWVudDtcbn0oKSk7XG4vLyBCb290XG52YXIgYXBwID0gbmV3IEFwcENsaWVudCgpO1xuYXBwLnN0YXJ0KCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=