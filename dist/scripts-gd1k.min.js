var app;(()=>{"use strict";var t={808:(t,s,o)=>{o.r(s)},457:(t,s,o)=>{o.r(s)},522:(t,s,o)=>{s.__esModule=!0,s.Toast=void 0,o(457);var e=function(){function t(t){this.REMOVE_TIME_MS=4e3,this.parent=t,this.duration=this.REMOVE_TIME_MS}return t.prototype.showSuccess=function(t,s){var o=this.getCustomToast(t,s,"success");this.addToast(o)},t.prototype.showInfo=function(t,s){var o=this.getCustomToast(t,s,"info");this.addToast(o)},t.prototype.showWarning=function(t,s){var o=this.getCustomToast(t,s,"warning");this.addToast(o)},t.prototype.showError=function(t,s){var o=this.getCustomToast(t,s,"error");this.addToast(o)},t.prototype.getCustomToast=function(t,s,o){return'<div class="dj-toast-icon-'+o+'"></div><div class="dj-toast-text"><div class="dj-toast-title">'+t+'</div><div class="dj-toast-message">'+s+"</div></div>"},t.prototype.addToast=function(s){var o=this,e=this.getContainer(),i=document.createElement("div");i.className="dj-toast hide",i.innerHTML=s,e.append(i);var a=document.createElement("div");return a.className="dj-toast-icon-close",i.append(a),a.addEventListener("click",(function(){o.removeToast(i)})),setTimeout((function(){o.removeToast(i)}),o.duration),setTimeout((function(){i.classList.add("show"),i.classList.remove("hide")}),t.FADE_MS),i},t.prototype.getContainer=function(){var t=document.querySelector(".dj-toast-container");if(t)return t;var s=document.createElement("div");return s.className="dj-toast-container",this.parent.append(s),s},t.prototype.removeToast=function(s){s.classList.add("hide"),s.classList.remove("show"),setTimeout((function(){s.remove()}),t.FADE_MS)},t.FADE_MS=200,t}();s.Toast=e}},s={};function o(e){var i=s[e];if(void 0!==i)return i.exports;var a=s[e]={exports:{}};return t[e](a,a.exports,o),a.exports}o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var e={};(()=>{var t=e;t.__esModule=!0,t.AppClient=void 0;var s=o(522);o(808);var i=function(){function t(){this.initiated=!1}return t.prototype.start=function(){if(!this.initiated){this.initiated=!0;var t=this;t.toastLogger=new s.Toast(document.body),document.querySelector("#showToast").addEventListener("click",(function(){var s=5*Math.random();s<1?t.toastLogger.showInfo("This is info. It is really long and it doesn't really fit into this small toast","This is info message"):s<2?t.toastLogger.showWarning("This is warning","This is warning message."):s<3?t.toastLogger.showSuccess("Success","You made it. Congratulations!"):s<4?t.toastLogger.showError("This is error","This is error message."):s<=5&&t.showMultipleToasts()}))}},t.prototype.showMultipleToasts=function(){this.toastLogger.showInfo("This is info","This is info message"),this.toastLogger.showSuccess("Success","You made it. Congratulations!"),this.toastLogger.showWarning("This is warning","This is warning message"),this.toastLogger.showError("This is error","This is error message")},t}();t.AppClient=i,(new i).start()})(),app=e})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,